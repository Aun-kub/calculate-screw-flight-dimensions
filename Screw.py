{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyOnxy4V0yCCrFetft10x08V",
      "include_colab_link": True
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Aun-kub/calculate-screw-flight-dimensions/blob/main/Screw.py\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 2,
      "metadata": {
        "id": "IeWpGnq7oAOn"
      },
      "outputs": [],
      "source": [
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "def calculate_screw_flight_dimensions(outer_diameter, inner_diameter, pitch, material_thickness):\n",
        "  \"\"\"\n",
        "  Calculates the flat pattern dimensions for a screw conveyor flight\n",
        "  using the formulas R1=(L1*h)/(L1-L2)-t and R2=R1+h.\n",
        "\n",
        "  Args:\n",
        "    outer_diameter: The outer diameter of the screw flight.\n",
        "    inner_diameter: The inner diameter of the screw flight.\n",
        "    pitch: The axial distance between corresponding points on consecutive turns.\n",
        "    material_thickness: The thickness of the material used for the flight.\n",
        "\n",
        "  Returns:\n",
        "    A dictionary containing the outer radius, inner radius, and sweep angle\n",
        "    (in degrees) of the flat pattern.\n",
        "  \"\"\"\n",
        "  # Implement basic validation for inputs\n",
        "  if outer_diameter <= 0 or inner_diameter <= 0 or pitch <= 0:\n",
        "      raise ValueError(\"Outer Diameter, Inner Diameter, and Pitch must be positive.\")\n",
        "  if inner_diameter >= outer_diameter:\n",
        "      raise ValueError(\"Inner Diameter must be less than Outer Diameter.\")\n",
        "  if material_thickness < 0:\n",
        "      raise ValueError(\"Material thickness cannot be negative.\")\n",
        "\n",
        "\n",
        "  # Calculate L1\n",
        "  L1 = np.sqrt((np.pi * outer_diameter)**2 + pitch**2)\n",
        "\n",
        "  # Calculate L2\n",
        "  L2 = np.sqrt((np.pi * inner_diameter)**2 + pitch**2)\n",
        "\n",
        "  # Calculate h\n",
        "  h = (outer_diameter - inner_diameter) / 2\n",
        "\n",
        "  # Calculate outer radius (R1)\n",
        "  # Add a check for L1 == L2 to prevent division by zero\n",
        "  if np.isclose(L1, L2): # Use np.isclose for floating point comparison\n",
        "      raise ValueError(\"L1 and L2 are equal, which would result in division by zero. Check input values (Outer Diameter, Inner Diameter, and Pitch).\")\n",
        "  outer_radius_developed = (L1 * h) / (L1 - L2) - material_thickness\n",
        "\n",
        "  # Calculate inner radius (R2)\n",
        "  inner_radius_developed = outer_radius_developed - h\n",
        "\n",
        "  # Implement basic validation for calculated results\n",
        "  if outer_radius_developed <= 0:\n",
        "      raise ValueError(\"Calculated outer developed radius is zero or negative. Check input values.\")\n",
        "  if inner_radius_developed <= 0:\n",
        "     raise ValueError(\"Calculated inner developed radius is zero or negative. Check input values.\")\n",
        "\n",
        "  # Calculate sweep angle\n",
        "  sweep_angle_rad = (L1 / outer_radius_developed)\n",
        "  sweep_angle_deg = np.degrees(sweep_angle_rad)\n",
        "\n",
        "  return {\n",
        "      \"outer_radius\": outer_radius_developed,\n",
        "      \"inner_radius\": inner_radius_developed,\n",
        "      \"sweep_angle_deg\": sweep_angle_deg\n",
        "  }"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "6fc8d67e",
        "outputId": "9e757510-2ed4-4c2a-88f3-a1bc29c84f08"
      },
      "source": [
        "%%writefile streamlit_screw_flight_app.py\n",
        "import streamlit as st\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "def calculate_screw_flight_dimensions(outer_diameter, inner_diameter, pitch, material_thickness):\n",
        "  \"\"\"\n",
        "  Calculates the flat pattern dimensions for a screw conveyor flight\n",
        "  using the formulas R1=(L1*h)/(L1-L2)-t and R2=R1+h.\n",
        "\n",
        "  Args:\n",
        "    outer_diameter: The outer diameter of the screw flight.\n",
        "    inner_diameter: The inner diameter of the screw flight.\n",
        "    pitch: The axial distance between corresponding points on consecutive turns.\n",
        "    material_thickness: The thickness of the material used for the flight.\n",
        "\n",
        "  Returns:\n",
        "    A dictionary containing the outer radius, inner radius, and sweep angle\n",
        "    (in degrees) of the flat pattern.\n",
        "  \"\"\"\n",
        "  # Implement basic validation for inputs\n",
        "  if outer_diameter <= 0 or inner_diameter <= 0 or pitch <= 0:\n",
        "      raise ValueError(\"Outer Diameter, Inner Diameter, and Pitch must be positive.\")\n",
        "  if inner_diameter >= outer_diameter:\n",
        "      raise ValueError(\"Inner Diameter must be less than Outer Diameter.\")\n",
        "  if material_thickness < 0:\n",
        "      raise ValueError(\"Material thickness cannot be negative.\")\n",
        "\n",
        "\n",
        "  # Calculate L1\n",
        "  L1 = np.sqrt((np.pi * outer_diameter)**2 + pitch**2)\n",
        "\n",
        "  # Calculate L2\n",
        "  L2 = np.sqrt((np.pi * inner_diameter)**2 + pitch**2)\n",
        "\n",
        "  # Calculate h\n",
        "  h = (outer_diameter - inner_diameter) / 2\n",
        "\n",
        "  # Calculate outer radius (R1)\n",
        "  # Add a check for L1 == L2 to prevent division by zero\n",
        "  if np.isclose(L1, L2): # Use np.isclose for floating point comparison\n",
        "      raise ValueError(\"L1 and L2 are equal, which would result in division by zero. Check input values (Outer Diameter, Inner Diameter, and Pitch).\")\n",
        "  outer_radius_developed = (L1 * h) / (L1 - L2) - material_thickness\n",
        "\n",
        "  # Calculate inner radius (R2)\n",
        "  inner_radius_developed = outer_radius_developed - h\n",
        "\n",
        "  # Implement basic validation for calculated results\n",
        "  if outer_radius_developed <= 0:\n",
        "      raise ValueError(\"Calculated outer developed radius is zero or negative. Check input values.\")\n",
        "  if inner_radius_developed <= 0:\n",
        "     raise ValueError(\"Calculated inner developed radius is zero or negative. Check input values.\")\n",
        "\n",
        "  # Calculate sweep angle\n",
        "  sweep_angle_rad = (L1 / outer_radius_developed)\n",
        "  sweep_angle_deg = np.degrees(sweep_angle_rad)\n",
        "\n",
        "  return {\n",
        "      \"outer_radius\": outer_radius_developed,\n",
        "      \"inner_radius\": inner_radius_developed,\n",
        "      \"sweep_angle_deg\": sweep_angle_deg\n",
        "  }\n",
        "\n",
        "# Streamlit App\n",
        "st.title(\"Screw Flight Flat Pattern Calculator\")\n",
        "\n",
        "st.sidebar.header(\"Input Dimensions (mm)\")\n",
        "\n",
        "outer_dia_mm = st.sidebar.number_input(\"Outer Diameter\", min_value=1, value=450)\n",
        "inner_dia_mm = st.sidebar.number_input(\"Inner Diameter\", min_value=1, value=118)\n",
        "pitch_val_mm = st.sidebar.number_input(\"Pitch\", min_value=1, value=350)\n",
        "material_t_mm = st.sidebar.number_input(\"Material Thickness\", min_value=0, value=6)\n",
        "\n",
        "# Convert millimeters to meters for the function\n",
        "outer_dia = outer_dia_mm / 1000\n",
        "inner_dia = inner_dia_mm / 1000\n",
        "pitch_val = pitch_val_mm / 1000\n",
        "material_t = material_t_mm / 1000\n",
        "\n",
        "try:\n",
        "    dimensions = calculate_screw_flight_dimensions(outer_dia, inner_dia, pitch_val, material_t)\n",
        "\n",
        "    st.subheader(\"Calculated Dimensions:\")\n",
        "    st.write(f\"Outer Radius (Developed): {dimensions['outer_radius']*1000:.2f} mm\")\n",
        "    st.write(f\"Inner Radius (Developed): {dimensions['inner_radius']*1000:.2f} mm\")\n",
        "    st.write(f\"Sweep Angle: {dimensions['sweep_angle_deg']:.2f} degrees\")\n",
        "\n",
        "    # Visualize the flat pattern\n",
        "    theta = np.linspace(0, np.radians(dimensions['sweep_angle_deg']), 100)\n",
        "    r_outer = dimensions['outer_radius'] * 1000 # Convert back to mm for plotting\n",
        "    r_inner = dimensions['inner_radius'] * 1000 # Convert back to mm for plotting\n",
        "\n",
        "    fig, ax = plt.subplots(figsize=(8, 8), subplot_kw={'projection': 'polar'})\n",
        "    ax.plot(theta, np.full_like(theta, r_outer), label='Outer Radius')\n",
        "    ax.plot(theta, np.full_like(theta, r_inner), label='Inner Radius')\n",
        "\n",
        "    # Add dimension text directly on lines\n",
        "    # Outer radius dimension\n",
        "    ax.text(np.radians(0), r_outer, f'{r_outer:.2f} mm',\n",
        "            bbox=dict(boxstyle='round,pad=0.3', fc='white', ec='black', lw=1),\n",
        "            ha='left', va='center', rotation=0)\n",
        "\n",
        "    # Inner radius dimension\n",
        "    ax.text(np.radians(0), r_inner, f'{r_inner:.2f} mm',\n",
        "            bbox=dict(boxstyle='round,pad=0.3', fc='white', ec='black', lw=1),\n",
        "            ha='left', va='center', rotation=0)\n",
        "\n",
        "    # Sweep angle dimension\n",
        "    ax.text(np.radians(dimensions['sweep_angle_deg'] / 2), r_outer, f'{dimensions[\"sweep_angle_deg\"]:.2f}°',\n",
        "            bbox=dict(boxstyle='round,pad=0.3', fc='white', ec='blue', lw=1),\n",
        "            ha='center', va='bottom')\n",
        "\n",
        "\n",
        "    # Side edges\n",
        "    ax.plot([0, 0], [r_inner, r_outer], color='red', linestyle='--', label='Side Edge')\n",
        "    ax.plot([np.radians(dimensions['sweep_angle_deg']), np.radians(dimensions['sweep_angle_deg'])], [r_inner, r_outer], color='red', linestyle='--')\n",
        "\n",
        "\n",
        "    ax.set_title('Screw Flight Flat Pattern (Dimensions in mm)')\n",
        "    ax.legend()\n",
        "    ax.grid(True) # Show the grid lines\n",
        "\n",
        "    st.pyplot(fig)\n",
        "\n",
        "except ValueError as e:\n",
        "    st.error(f\"Error calculating dimensions: {e}\")"
      ],
      "execution_count": 34,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Overwriting streamlit_screw_flight_app.py\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 774
        },
        "id": "41e670a6",
        "outputId": "d4f91c61-4c20-4b79-f8b3-9c07ac3c8ce7"
      },
      "source": [
        "# Example usage of the function\n",
        "outer_dia_mm = 450  # millimeters\n",
        "inner_dia_mm =118# millimeters\n",
        "pitch_val_mm = 350  # millimeters\n",
        "material_t_mm = 6 # millimeters\n",
        "\n",
        "# Convert millimeters to meters for the function\n",
        "outer_dia = outer_dia_mm / 1000\n",
        "inner_dia = inner_dia_mm / 1000\n",
        "pitch_val = pitch_val_mm / 1000\n",
        "material_t = material_t_mm / 1000\n",
        "\n",
        "\n",
        "try:\n",
        "    dimensions = calculate_screw_flight_dimensions(outer_dia, inner_dia, pitch_val, material_t)\n",
        "    print(\"Calculated Dimensions:\")\n",
        "    print(f\"Outer Radius (Developed): {dimensions['outer_radius']*1000:.2f} mm\")\n",
        "    print(f\"Inner Radius (Developed): {dimensions['inner_radius']*1000:.2f} mm\")\n",
        "    print(f\"Sweep Angle: {dimensions['sweep_angle_deg']:.2f} degrees\")\n",
        "\n",
        "    # Visualize the flat pattern\n",
        "    theta = np.linspace(0, np.radians(dimensions['sweep_angle_deg']), 100)\n",
        "    r_outer = dimensions['outer_radius'] * 1000 # Convert back to mm for plotting\n",
        "    r_inner = dimensions['inner_radius'] * 1000 # Convert back to mm for plotting\n",
        "\n",
        "\n",
        "    plt.figure(figsize=(8, 8))\n",
        "    ax = plt.subplot(111, projection='polar')\n",
        "    ax.plot(theta, np.full_like(theta, r_outer), label='Outer Radius')\n",
        "    ax.plot(theta, np.full_like(theta, r_inner), label='Inner Radius')\n",
        "\n",
        "    # Add dimension text directly on lines\n",
        "    # Outer radius dimension\n",
        "    ax.text(np.radians(dimensions['sweep_angle_deg'] * 0.9), r_outer, f'{r_outer:.2f} mm',\n",
        "            bbox=dict(boxstyle='round,pad=0.3', fc='white', ec='blue', lw=1),\n",
        "            ha='right', va='center', rotation=0)\n",
        "\n",
        "    # Inner radius dimension\n",
        "    ax.text(np.radians(dimensions['sweep_angle_deg'] * 0.9), r_inner, f'{r_inner:.2f} mm',\n",
        "            bbox=dict(boxstyle='round,pad=0.3', fc='white', ec='orange', lw=1),\n",
        "            ha='right', va='center', rotation=0)\n",
        "\n",
        "    # Sweep angle dimension\n",
        "    # Adjusting the vertical alignment and potentially the radial position to avoid overlap\n",
        "    ax.text(np.radians(dimensions['sweep_angle_deg'] / 2), r_outer * 0.9, f'{dimensions[\"sweep_angle_deg\"]:.2f}°',\n",
        "            bbox=dict(boxstyle='round,pad=0.3', fc='white', ec='blue', lw=1),\n",
        "            ha='center', va='top')\n",
        "\n",
        "\n",
        "    # Side edges\n",
        "    ax.plot([0, 0], [r_inner, r_outer], color='red', linestyle='--', label='Side Edge')\n",
        "    ax.plot([np.radians(dimensions['sweep_angle_deg']), np.radians(dimensions['sweep_angle_deg'])], [r_inner, r_outer], color='red', linestyle='--')\n",
        "\n",
        "\n",
        "    ax.set_title('Screw Flight Flat Pattern (Dimensions in mm)')\n",
        "    ax.legend()\n",
        "    ax.grid(True) # Show the grid lines\n",
        "    plt.show()\n",
        "\n",
        "except ValueError as e:\n",
        "    print(f\"Error calculating dimensions: {e}\")"
      ],
      "execution_count": 33,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Calculated Dimensions:\n",
            "Outer Radius (Developed): 249.41 mm\n",
            "Inner Radius (Developed): 83.41 mm\n",
            "Sweep Angle: 334.57 degrees\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x800 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "bdf76feb",
        "outputId": "8c1e7c37-f0ea-4979-94dd-87132a3aa7a5"
      },
      "source": [
        "%%writefile streamlit_screw_flight_app.py\n",
        "import streamlit as st\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "def calculate_screw_flight_dimensions(outer_diameter, inner_diameter, pitch, material_thickness):\n",
        "  \"\"\"\n",
        "  Calculates the flat pattern dimensions for a screw conveyor flight\n",
        "  using the formulas R1=(L1*h)/(L1-L2)-t and R2=R1+h.\n",
        "\n",
        "  Args:\n",
        "    outer_diameter: The outer diameter of the screw flight.\n",
        "    inner_diameter: The inner diameter of the screw flight.\n",
        "    pitch: The axial distance between corresponding points on consecutive turns.\n",
        "    material_thickness: The thickness of the material used for the flight.\n",
        "\n",
        "  Returns:\n",
        "    A dictionary containing the outer radius, inner radius, and sweep angle\n",
        "    (in degrees) of the flat pattern.\n",
        "  \"\"\"\n",
        "  # Implement basic validation for inputs\n",
        "  if outer_diameter <= 0 or inner_diameter <= 0 or pitch <= 0:\n",
        "      raise ValueError(\"Outer Diameter, Inner Diameter, and Pitch must be positive.\")\n",
        "  if inner_diameter >= outer_diameter:\n",
        "      raise ValueError(\"Inner Diameter must be less than Outer Diameter.\")\n",
        "  if material_thickness < 0:\n",
        "      raise ValueError(\"Material thickness cannot be negative.\")\n",
        "\n",
        "\n",
        "  # Calculate L1\n",
        "  L1 = np.sqrt((np.pi * outer_diameter)**2 + pitch**2)\n",
        "\n",
        "  # Calculate L2\n",
        "  L2 = np.sqrt((np.pi * inner_diameter)**2 + pitch**2)\n",
        "\n",
        "  # Calculate h\n",
        "  h = (outer_diameter - inner_diameter) / 2\n",
        "\n",
        "  # Calculate outer radius (R1)\n",
        "  # Add a check for L1 == L2 to prevent division by zero\n",
        "  if np.isclose(L1, L2): # Use np.isclose for floating point comparison\n",
        "      raise ValueError(\"L1 and L2 are equal, which would result in division by zero. Check input values (Outer Diameter, Inner Diameter, and Pitch).\")\n",
        "  outer_radius_developed = (L1 * h) / (L1 - L2) - material_thickness\n",
        "\n",
        "  # Calculate inner radius (R2)\n",
        "  inner_radius_developed = outer_radius_developed - h\n",
        "\n",
        "  # Implement basic validation for calculated results\n",
        "  if outer_radius_developed <= 0:\n",
        "      raise ValueError(\"Calculated outer developed radius is zero or negative. Check input values.\")\n",
        "  if inner_radius_developed <= 0:\n",
        "     raise ValueError(\"Calculated inner developed radius is zero or negative. Check input values.\")\n",
        "\n",
        "  # Calculate sweep angle\n",
        "  sweep_angle_rad = (L1 / outer_radius_developed)\n",
        "  sweep_angle_deg = np.degrees(sweep_angle_rad)\n",
        "\n",
        "  return {\n",
        "      \"outer_radius\": outer_radius_developed,\n",
        "      \"inner_radius\": inner_radius_developed,\n",
        "      \"sweep_angle_deg\": sweep_angle_deg\n",
        "  }\n",
        "\n",
        "# Streamlit App\n",
        "st.title(\"Screw Flight Flat Pattern Calculator\")\n",
        "\n",
        "st.sidebar.header(\"Input Dimensions (mm)\")\n",
        "\n",
        "outer_dia_mm = st.sidebar.number_input(\"Outer Diameter\", min_value=1, value=450)\n",
        "inner_dia_mm = st.sidebar.number_input(\"Inner Diameter\", min_value=1, value=118)\n",
        "pitch_val_mm = st.sidebar.number_input(\"Pitch\", min_value=1, value=350)\n",
        "material_t_mm = st.sidebar.number_input(\"Material Thickness\", min_value=0, value=6)\n",
        "\n",
        "# Convert millimeters to meters for the function\n",
        "outer_dia = outer_dia_mm / 1000\n",
        "inner_dia = inner_dia_mm / 1000\n",
        "pitch_val = pitch_val_mm / 1000\n",
        "material_t = material_t_mm / 1000\n",
        "\n",
        "try:\n",
        "    dimensions = calculate_screw_flight_dimensions(outer_dia, inner_dia, pitch_val, material_t)\n",
        "\n",
        "    st.subheader(\"Calculated Dimensions:\")\n",
        "    st.write(f\"Outer Radius (Developed): {dimensions['outer_radius']*1000:.2f} mm\")\n",
        "    st.write(f\"Inner Radius (Developed): {dimensions['inner_radius']*1000:.2f} mm\")\n",
        "    st.write(f\"Sweep Angle: {dimensions['sweep_angle_deg']:.2f} degrees\")\n",
        "\n",
        "    # Visualize the flat pattern\n",
        "    theta = np.linspace(0, np.radians(dimensions['sweep_angle_deg']), 100)\n",
        "    r_outer = dimensions['outer_radius'] * 1000 # Convert back to mm for plotting\n",
        "    r_inner = dimensions['inner_radius'] * 1000 # Convert back to mm for plotting\n",
        "\n",
        "    fig, ax = plt.subplots(figsize=(8, 8), subplot_kw={'projection': 'polar'})\n",
        "    ax.plot(theta, np.full_like(theta, r_outer), label='Outer Radius')\n",
        "    ax.plot(theta, np.full_like(theta, r_inner), label='Inner Radius')\n",
        "\n",
        "    # Add dimension text directly on lines\n",
        "    # Outer radius dimension\n",
        "    ax.text(np.radians(0), r_outer, f'{r_outer:.2f} mm',\n",
        "            bbox=dict(boxstyle='round,pad=0.3', fc='white', ec='black', lw=1),\n",
        "            ha='left', va='center', rotation=0)\n",
        "\n",
        "    # Inner radius dimension\n",
        "    ax.text(np.radians(0), r_inner, f'{r_inner:.2f} mm',\n",
        "            bbox=dict(boxstyle='round,pad=0.3', fc='white', ec='black', lw=1),\n",
        "            ha='left', va='center', rotation=0)\n",
        "\n",
        "    # Sweep angle dimension\n",
        "    ax.text(np.radians(dimensions['sweep_angle_deg'] / 2), r_outer, f'{dimensions[\"sweep_angle_deg\"]:.2f}°',\n",
        "            bbox=dict(boxstyle='round,pad=0.3', fc='white', ec='blue', lw=1),\n",
        "            ha='center', va='bottom')\n",
        "\n",
        "\n",
        "    # Side edges\n",
        "    ax.plot([0, 0], [r_inner, r_outer], color='red', linestyle='--', label='Side Edge')\n",
        "    ax.plot([np.radians(dimensions['sweep_angle_deg']), np.radians(dimensions['sweep_angle_deg'])], [r_inner, r_outer], color='red', linestyle='--')\n",
        "\n",
        "\n",
        "    ax.set_title('Screw Flight Flat Pattern (Dimensions in mm)')\n",
        "    ax.legend()\n",
        "    ax.grid(True) # Show the grid lines\n",
        "\n",
        "    st.pyplot(fig)\n",
        "\n",
        "except ValueError as e:\n",
        "    st.error(f\"Error calculating dimensions: {e}\")"
      ],
      "execution_count": 20,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Writing streamlit_screw_flight_app.py\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ed97d3e3",
        "outputId": "4813cc5e-68c2-46d4-deed-3d566258abeb"
      },
      "source": [
        "!pip install streamlit matplotlib numpy"
      ],
      "execution_count": 21,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Collecting streamlit\n",
            "  Downloading streamlit-1.49.1-py3-none-any.whl.metadata (9.5 kB)\n",
            "Requirement already satisfied: matplotlib in /usr/local/lib/python3.12/dist-packages (3.10.0)\n",
            "Requirement already satisfied: numpy in /usr/local/lib/python3.12/dist-packages (2.0.2)\n",
            "Requirement already satisfied: altair!=5.4.0,!=5.4.1,<6,>=4.0 in /usr/local/lib/python3.12/dist-packages (from streamlit) (5.5.0)\n",
            "Requirement already satisfied: blinker<2,>=1.5.0 in /usr/local/lib/python3.12/dist-packages (from streamlit) (1.9.0)\n",
            "Requirement already satisfied: cachetools<7,>=4.0 in /usr/local/lib/python3.12/dist-packages (from streamlit) (5.5.2)\n",
            "Requirement already satisfied: click<9,>=7.0 in /usr/local/lib/python3.12/dist-packages (from streamlit) (8.2.1)\n",
            "Requirement already satisfied: packaging<26,>=20 in /usr/local/lib/python3.12/dist-packages (from streamlit) (25.0)\n",
            "Requirement already satisfied: pandas<3,>=1.4.0 in /usr/local/lib/python3.12/dist-packages (from streamlit) (2.2.2)\n",
            "Requirement already satisfied: pillow<12,>=7.1.0 in /usr/local/lib/python3.12/dist-packages (from streamlit) (11.3.0)\n",
            "Requirement already satisfied: protobuf<7,>=3.20 in /usr/local/lib/python3.12/dist-packages (from streamlit) (5.29.5)\n",
            "Requirement already satisfied: pyarrow>=7.0 in /usr/local/lib/python3.12/dist-packages (from streamlit) (18.1.0)\n",
            "Requirement already satisfied: requests<3,>=2.27 in /usr/local/lib/python3.12/dist-packages (from streamlit) (2.32.4)\n",
            "Requirement already satisfied: tenacity<10,>=8.1.0 in /usr/local/lib/python3.12/dist-packages (from streamlit) (8.5.0)\n",
            "Requirement already satisfied: toml<2,>=0.10.1 in /usr/local/lib/python3.12/dist-packages (from streamlit) (0.10.2)\n",
            "Requirement already satisfied: typing-extensions<5,>=4.4.0 in /usr/local/lib/python3.12/dist-packages (from streamlit) (4.15.0)\n",
            "Requirement already satisfied: watchdog<7,>=2.1.5 in /usr/local/lib/python3.12/dist-packages (from streamlit) (6.0.0)\n",
            "Requirement already satisfied: gitpython!=3.1.19,<4,>=3.0.7 in /usr/local/lib/python3.12/dist-packages (from streamlit) (3.1.45)\n",
            "Collecting pydeck<1,>=0.8.0b4 (from streamlit)\n",
            "  Downloading pydeck-0.9.1-py2.py3-none-any.whl.metadata (4.1 kB)\n",
            "Requirement already satisfied: tornado!=6.5.0,<7,>=6.0.3 in /usr/local/lib/python3.12/dist-packages (from streamlit) (6.4.2)\n",
            "Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.12/dist-packages (from matplotlib) (1.3.3)\n",
            "Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.12/dist-packages (from matplotlib) (0.12.1)\n",
            "Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.12/dist-packages (from matplotlib) (4.59.2)\n",
            "Requirement already satisfied: kiwisolver>=1.3.1 in /usr/local/lib/python3.12/dist-packages (from matplotlib) (1.4.9)\n",
            "Requirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.12/dist-packages (from matplotlib) (3.2.3)\n",
            "Requirement already satisfied: python-dateutil>=2.7 in /usr/local/lib/python3.12/dist-packages (from matplotlib) (2.9.0.post0)\n",
            "Requirement already satisfied: jinja2 in /usr/local/lib/python3.12/dist-packages (from altair!=5.4.0,!=5.4.1,<6,>=4.0->streamlit) (3.1.6)\n",
            "Requirement already satisfied: jsonschema>=3.0 in /usr/local/lib/python3.12/dist-packages (from altair!=5.4.0,!=5.4.1,<6,>=4.0->streamlit) (4.25.1)\n",
            "Requirement already satisfied: narwhals>=1.14.2 in /usr/local/lib/python3.12/dist-packages (from altair!=5.4.0,!=5.4.1,<6,>=4.0->streamlit) (2.4.0)\n",
            "Requirement already satisfied: gitdb<5,>=4.0.1 in /usr/local/lib/python3.12/dist-packages (from gitpython!=3.1.19,<4,>=3.0.7->streamlit) (4.0.12)\n",
            "Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.12/dist-packages (from pandas<3,>=1.4.0->streamlit) (2025.2)\n",
            "Requirement already satisfied: tzdata>=2022.7 in /usr/local/lib/python3.12/dist-packages (from pandas<3,>=1.4.0->streamlit) (2025.2)\n",
            "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.12/dist-packages (from python-dateutil>=2.7->matplotlib) (1.17.0)\n",
            "Requirement already satisfied: charset_normalizer<4,>=2 in /usr/local/lib/python3.12/dist-packages (from requests<3,>=2.27->streamlit) (3.4.3)\n",
            "Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.12/dist-packages (from requests<3,>=2.27->streamlit) (3.10)\n",
            "Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.12/dist-packages (from requests<3,>=2.27->streamlit) (2.5.0)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.12/dist-packages (from requests<3,>=2.27->streamlit) (2025.8.3)\n",
            "Requirement already satisfied: smmap<6,>=3.0.1 in /usr/local/lib/python3.12/dist-packages (from gitdb<5,>=4.0.1->gitpython!=3.1.19,<4,>=3.0.7->streamlit) (5.0.2)\n",
            "Requirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.12/dist-packages (from jinja2->altair!=5.4.0,!=5.4.1,<6,>=4.0->streamlit) (3.0.2)\n",
            "Requirement already satisfied: attrs>=22.2.0 in /usr/local/lib/python3.12/dist-packages (from jsonschema>=3.0->altair!=5.4.0,!=5.4.1,<6,>=4.0->streamlit) (25.3.0)\n",
            "Requirement already satisfied: jsonschema-specifications>=2023.03.6 in /usr/local/lib/python3.12/dist-packages (from jsonschema>=3.0->altair!=5.4.0,!=5.4.1,<6,>=4.0->streamlit) (2025.9.1)\n",
            "Requirement already satisfied: referencing>=0.28.4 in /usr/local/lib/python3.12/dist-packages (from jsonschema>=3.0->altair!=5.4.0,!=5.4.1,<6,>=4.0->streamlit) (0.36.2)\n",
            "Requirement already satisfied: rpds-py>=0.7.1 in /usr/local/lib/python3.12/dist-packages (from jsonschema>=3.0->altair!=5.4.0,!=5.4.1,<6,>=4.0->streamlit) (0.27.1)\n",
            "Downloading streamlit-1.49.1-py3-none-any.whl (10.0 MB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m10.0/10.0 MB\u001b[0m \u001b[31m93.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading pydeck-0.9.1-py2.py3-none-any.whl (6.9 MB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m6.9/6.9 MB\u001b[0m \u001b[31m116.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hInstalling collected packages: pydeck, streamlit\n",
            "Successfully installed pydeck-0.9.1 streamlit-1.49.1\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "2652d433"
      },
      "source": [
        "!streamlit run streamlit_screw_flight_app.py &>/dev/null&"
      ],
      "execution_count": 22,
      "outputs": []
    }
  ]
}
